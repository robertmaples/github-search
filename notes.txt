High-level plan
1) Create Input UI
2) Get call
3) Connect data to UI
4) Built out Result UI

Questions
 - CSS in JS, includes styled components?
 - Is npm or yarn used for package management?
 
1/24
- Add linting, auto format on save (vscode)

1/25
Finished styling search descriptor, added prettier and left out
eslint due to project size.

- Finish Search UI

1/26
Finished Search UI, dealt with package dependency issues when
installing Redux Query.

- Install and implement redux query.

Decided use react query for fetching API data. Redux Query is incompatible
with the latest version of React (17) and doesn't appear to be actively
maintained; last commit was 15 months ago on a config, and 2 years ago for
meaningful source code commits.

Implemented react query and handling of select dropdown.

- Handle search input

Refreshing of query completed, search input implemented (without throttling for rate limit).

x - Refactoring code base 
x - Implement repo search logic
x - Build out results UI

Location only available for user endpoint, not in search. 
Leaving out for now.

1/27

Results UI completed for users and repos. Working on implementing debounce

- Implement debounce
- Implement loading/error screens

1/30

TODO:
- Implement loading/error screens
- Complete README
- links on repos for narrowed screen

Future work:
- "Showing 30 of 1000 result"
- Pagination
